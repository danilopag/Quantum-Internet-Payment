/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * 
 * File: defaultscheduler.h
 * 
 * This file is part of the PyDynAA package.
 * It is subject to the NetSquid Software End User License Conditions.
 * A copy of these conditions can be found in the LICENSE.md file of this package.
 * 
 * Authors
 * =======
 * 
 * - Julio de Oliveira Filho
 * - Rob Knegjens
 * - Coen van Leeuwen
 * - Joost Adriaanse
 * 
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 */
// NOTE: a guard with license and author info is auto added to package distributions (see setup.py)
#ifndef INCLUDED_SCHEDULER_
#define INCLUDED_SCHEDULER_

#include <map>
#include <vector>

#include "dynaatypes.h"
#include "schedulerinspectorinterface.h"
#include "scheduleruserinterface.h"

namespace dynaa {

/**
 * Core class offering a default scheduler implementation for cDynAA
 *
 * The DefaultScheduler is offers a facade to
 *
 */
class DefaultScheduler :  virtual public SchedulerInspectorInterface,  virtual public SchedulerUserInterface {

    typedef std::map<SimTime, EventSet> Timeline;

private:

    Timeline m_timeline;

public:
    /**
    *  Default inlined constructor
    */
    DefaultScheduler() : m_timeline() {}

    void scheduleNow(const Event event);
    void scheduleAt(SimTime instant, const Event event);
    void scheduleAfter(SimTime interval, const Event event);
    void unschedule(const Event event);
    SimTime getNextInstant() const;
    EventSet removeEventsAt(const SimTime instant);
    EventSet getEventsAt(const SimTime instant) const;
    std::vector<SimTime> getInstants() const;
    long getNumberOfInstants() const;
    long getNumberOfEvents() const;
    void reset();
};
}

#endif
