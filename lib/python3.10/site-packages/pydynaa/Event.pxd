# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# File: Event.pxd
# 
# This file is part of the PyDynAA package.
# It is subject to the NetSquid Software End User License Conditions.
# A copy of these conditions can be found in the LICENSE.md file of this package.
# 
# Authors
# =======
# 
# - Julio de Oliveira Filho
# - Rob Knegjens
# - Coen van Leeuwen
# - Joost Adriaanse
# 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# NOTE: a guard with license and author info is auto added to package distributions (see setup.py)
"""
C++ class definition for Event.
"""
from libcpp.string cimport string as libcpp_string
from libcpp cimport bool
from libcpp.memory cimport weak_ptr as libcpp_weak_ptr
from libcpp.memory cimport shared_ptr as libcpp_shared_ptr


from pydynaa.EventType cimport EventType as _EventType
from pydynaa.Entity cimport Entity as _Entity


cdef extern from "<event.h>" namespace "dynaa":
    
    ctypedef long EventID

    ctypedef libcpp_weak_ptr[_Entity] EventSource

    cdef cppclass Event:

        Event() nogil except +
        Event(Event) nogil except +

        EventID id() nogil except +
        libcpp_shared_ptr[_Entity] source() nogil except +
        _EventType & type() nogil except +
        libcpp_shared_ptr[_EventType] typeAsPtr() nogil except +

        bool operator== (Event & other) nogil except +
        bool operator!= (Event & other) nogil except +
        bool operator< (Event & other) nogil except +

cdef extern from "<event.h>" namespace "dynaa::Event":

    cdef _EventType ANY_TYPE
    cdef libcpp_shared_ptr[_Entity] ANY_SOURCE
    cdef EventID ANY_ID
