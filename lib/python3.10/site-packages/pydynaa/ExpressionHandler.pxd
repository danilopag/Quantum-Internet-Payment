# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# File: ExpressionHandler.pxd
# 
# This file is part of the PyDynAA package.
# It is subject to the NetSquid Software End User License Conditions.
# A copy of these conditions can be found in the LICENSE.md file of this package.
# 
# Authors
# =======
# 
# - Julio de Oliveira Filho
# - Rob Knegjens
# - Coen van Leeuwen
# - Joost Adriaanse
# 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# NOTE: a guard with license and author info is auto added to package distributions (see setup.py)
"""
C++ class declaration for ExpressionHandler
"""
from libcpp.string cimport string as libcpp_string
from libcpp.memory cimport shared_ptr
from libcpp.memory cimport weak_ptr
from libcpp cimport bool
from libcpp.vector cimport vector

from pydynaa.Event cimport Event as _Event
from pydynaa.Entity cimport Entity as _Entity
from pydynaa.EventExpression cimport EventExpression as _EventExpression
from pydynaa.PyObjWrapper cimport PyObjWrapper as _PyObjWrapper

cdef extern from "<expressionhandler.h>" namespace "dynaa":

    cdef cppclass ExpressionHandler:

        ExpressionHandler() nogil except +
        ExpressionHandler(ExpressionHandler) nogil except +
        ExpressionHandler(_PyObjWrapper, libcpp_string identifier, vector[weak_ptr[_Entity]] safe_guards, int priority) nogil except +
        ExpressionHandler(libcpp_string identifier, vector[weak_ptr[_Entity]] safe_guards, int priority) nogil except +

        # TODO should this method have nogil ?
        void handle(_Event event) except +
        void handle(shared_ptr[_EventExpression] evExpr) except +

        libcpp_string getIdentifier() nogil except +

        int getPriorityLevel() const


#cdef extern from "<eventhandler.h>" namespace "dynaa::ExpressionHandler":
#
#    cdef const int DEFAULT_PRIORITY_LEVEL
#    cdef const int HIGHEST_PRIORITY_LEVEL
#    cdef const int LOWEST_PRIORITY_LEVEL
