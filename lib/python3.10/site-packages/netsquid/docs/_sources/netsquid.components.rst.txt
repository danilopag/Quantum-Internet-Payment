netsquid\.components
====================

In NetSquid components represent the *physical* entities (:py:obj:`~pydynaa.core.Entity`) of a quantum network,
such as quantum memories (:py:obj:`~netsquid.components.qmemory.QuantumMemory`),
classical channels (:py:obj:`~netsquid.components.cchannel.ClassicalChannel`
and quantum processors (:py:obj:`~netsquid.components.qprocessor.QuantumProcessor`).
Components can exist at the nodes (:py:obj:`~netsquid.nodes.node.Node`) in a quantum network
or within the connections (:py:obj:`~netsquid.nodes.connections.Connection`\) that link them,
both of which are examples of composite components.
Components derive from a :py:obj:`~netsquid.components.component.Component` base class.

Schematic overview of the components module:

.. image:: _static/component_module.png
    :align: center

.. toctree::
    :maxdepth: 2
    :caption: Modules

    api_components/netsquid.components.component
    api_components/netsquid.components.channel
    api_components/netsquid.components.qchannel
    api_components/netsquid.components.cchannel
    api_components/netsquid.components.cqchannel
    api_components/netsquid.components.qmemory
    api_components/netsquid.components.instructions
    api_components/netsquid.components.qprogram
    api_components/netsquid.components.qprocessor
    api_components/netsquid.components.clock
    api_components/netsquid.components.qsource
    api_components/netsquid.components.qdetector
    api_components/netsquid.components.switch
    api_components/netsquid.components.ccoding

